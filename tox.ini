[tox]
project = Vagrant
minversion = 3.7.0
skipsdist = true
envlist = py{2,3},lint,vagrantlint
skip_missing_interpreters = true


[testenv]
setenv =
    LC_ALL = en_US.UTF-8
    VIRTUAL_ENV = {envdir}
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONWARNINGS = ignore
    VIRTUALENV_NO_DOWNLOAD = 1
    PIP_CONFIG_FILE = .pip.conf
passenv =
    USERPROFILE
sitepackages = false
recreate = true
parallel_show_output = true
whitelist_externals =
    find
deps =
    py2: tornado==5.1.1
    py2: more-itertools==5.0.0
    py3,travis: shellcheck-py==0.7.0.1
    jinja2==2.11.0
    pre-commit==1.18.0
    mkdocs==1.0.4
commands =
    - find . -type f -name "*.pyc" -delete
    - find . -type d -name "__pycache__" -delete
    {envpython} -m pip check


[testenv:lint]
description = Execute project linters
recreate = false
basepython = python3
deps =
    pre-commit==1.18.0
    shellcheck-py==0.7.0.1
commands =
    {envpython} -m pre_commit run --all


[testenv:vagrantlint]
description = Validate/Lint Vagrant file
recreate = false
basepython = python3
deps =
    pre-commit==1.18.0
commands =
    {envpython} -m pre_commit run --hook-stage manual vagrantlint


[testenv:docs]
description = Project documentation
recreate = false
basepython = python3
deps =
    mkdocs== 1.0.4
commands =
    {envpython} -m mkdocs serve


[testenv:travis]
description = Travis CI
basepython = python3
commands =
    {envpython} -m pre_commit run --all
    {envpython} -m mkdocs build --strict


[testenv:venv]
description = Any local command in virtualenv
commands = {posargs}
